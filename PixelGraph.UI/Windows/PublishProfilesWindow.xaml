<mah:MetroWindow x:Class="PixelGraph.UI.Windows.PackProfilesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:PixelGraph.UI.ViewModels"
        xmlns:controls="clr-namespace:PixelGraph.UI.Controls"
        xmlns:converters="clr-namespace:PixelGraph.UI.Converters"
        xmlns:textures="clr-namespace:PixelGraph.Common.Textures;assembly=PixelGraph.Common"
        xmlns:vd="clr-namespace:PixelGraph.UI.ViewData"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        Title="Publishing Profiles" Width="1000" Height="600" mc:Ignorable="d" WindowStartupLocation="CenterOwner"
        d:DataContext="{d:DesignInstance vm:ProfilesDesignVM, IsDesignTimeCreatable=True}"
        Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
        Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}">
    <Window.Resources>
        <vd:GameEditionValues x:Key="GameEditions"/>
        <vd:ImageEncodingValues x:Key="ImageEncodings"/>
        <vd:OptionalTextureTagValues x:Key="TextureTags"/>
        <vd:OptionalColorChannelValues x:Key="ColorChannels"/>
        <vd:NormalColorChannelValues x:Key="NormalColorChannels"/>
        <!--<vd:AllTextureFormatValues x:Key="AllTextureFormats"/>-->
        <vd:SamplerValues x:Key="Samplers"/>
        <converters:NullableConverter x:Key="NullableConverter"/>
        <converters:TextureLabelConverter x:Key="TextureLabelConverter"/>
        <converters:SamplerLabelConverter x:Key="SamplerLabelConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <converters:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter"/>
    </Window.Resources>
    <Window.DataContext>
        <vm:PublishProfilesVM x:Name="VM" DataChanged="OnDataChanged"/>
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="260"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <DockPanel Margin="0,0,3,0">
            <ToolBar DockPanel.Dock="Top" ToolBarTray.IsLocked="True">
                <Button ToolTip="New Profile" Width="32" Height="28" Padding="0" Click="OnNewProfileClick" Foreground="LawnGreen"
                        Content="{iconPacks:FontAwesome Kind=PlusSolid}"/>
                <Button ToolTip="Duplicate Profile" Width="32" Height="28" Padding="0" Click="OnDuplicateProfileClick" Foreground="DeepSkyBlue"
                        Content="{iconPacks:FontAwesome Kind=CopySolid}"
                        IsEnabled="{Binding HasSelectedProfile, Mode=OneWay}"/>
                <Button ToolTip="Delete Profile" Width="32" Height="28" Padding="0" Click="OnDeleteProfileClick" Foreground="Red"
                        Content="{iconPacks:FontAwesome Kind=TrashSolid}"
                        IsEnabled="{Binding HasSelectedProfile, Mode=OneWay}">
                </Button>
            </ToolBar>
            <ListBox x:Name="ProfileListBox" DisplayMemberPath="Name" Width="320" Background="Black" MouseDown="OnProfileListBoxMouseDown" SelectionChanged="OnProfileSelectionChanged"
                     ItemsSource="{Binding Profiles, Mode=OneWay}"
                     SelectedItem="{Binding SelectedProfileItem, Mode=TwoWay}"/>
        </DockPanel>
        <GridSplitter Grid.Column="0" ResizeBehavior="CurrentAndNext" ResizeDirection="Columns" ShowsPreview="True" HorizontalAlignment="Right" Width="3"/>
        <TabControl Grid.Column="1" mah:HeaderedControlHelper.HeaderFontSize="28" Style="{StaticResource MahApps.Styles.TabControl}"
                    IsEnabled="{Binding HasSelectedProfile, Mode=OneWay}">
            <TabItem Header="Metadata">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Orientation="Vertical" Margin="12">
                        <TextBlock Text="Pack Name" FontSize="12" FontWeight="Bold"
                                   Foreground="{DynamicResource MahApps.Brushes.Accent2}"/>
                        <TextBox Text="{Binding PackName}"/>
                        <TextBlock Text="Game Edition" FontSize="12" FontWeight="Bold" Margin="0,12,0,0"
                                   Foreground="{DynamicResource MahApps.Brushes.Accent2}"/>
                        <ComboBox DisplayMemberPath="Text" SelectedValuePath="Value"
                                  ItemsSource="{StaticResource GameEditions}"
                                  SelectedValue="{Binding GameEdition}"/>
                        <TextBlock Text="Description" FontSize="12" FontWeight="Bold" Margin="0,12,0,0"
                                   Foreground="{DynamicResource MahApps.Brushes.Accent2}"/>
                        <TextBox Text="{Binding PackDescription}"/>
                        <TextBlock Text="Tags" FontSize="12" FontWeight="Bold" Margin="0,12,0,0"
                                   Foreground="{DynamicResource MahApps.Brushes.Accent2}"
                                   Visibility="{Binding IsJavaProfile, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <TextBox Text="{Binding PackTags}"
                                 Visibility="{Binding IsJavaProfile, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <TextBlock Text="Pack Version" FontSize="12" FontWeight="Bold" Margin="0,12,0,0"
                                   Foreground="{DynamicResource MahApps.Brushes.Accent2}"/>
                        <TextBox Text="{Binding PackFormat}"/>
                        <TextBlock Text="Header UUID" FontSize="12" FontWeight="Bold" Margin="0,12,0,0"
                                   Foreground="{DynamicResource MahApps.Brushes.Accent2}"
                                   Visibility="{Binding IsBedrockProfile, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <DockPanel Visibility="{Binding IsBedrockProfile, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button DockPanel.Dock="Right" Margin="6,0,0,0" Content="{iconPacks:FontAwesome Kind=EditSolid}" Click="OnGenerateHeaderUuid"/>
                            <TextBox Text="{Binding PackHeaderUuid, Mode=TwoWay, Converter={StaticResource NullableConverter}}"/>
                        </DockPanel>
                        <TextBlock Text="Module UUID" FontSize="12" FontWeight="Bold" Margin="0,12,0,0"
                                   Foreground="{DynamicResource MahApps.Brushes.Accent2}"
                                   Visibility="{Binding IsBedrockProfile, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <DockPanel Visibility="{Binding IsBedrockProfile, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button DockPanel.Dock="Right" Margin="6,0,0,0" Content="{iconPacks:FontAwesome Kind=EditSolid}" Click="OnGenerateModuleUuid"/>
                            <TextBox Text="{Binding PackModuleUuid, Mode=TwoWay, Converter={StaticResource NullableConverter}}"/>
                        </DockPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Encoding">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Orientation="Vertical" Margin="12">
                        <TextBlock Text="Format" FontSize="12" FontWeight="Bold"
                                   Foreground="{DynamicResource MahApps.Brushes.Accent2}"/>
                        <ComboBox DisplayMemberPath="Text" SelectedValuePath="Value"
                                  ItemsSource="{Binding TextureFormatOptions, Mode=OneWay}"
                                  SelectedValue="{Binding TextureFormat, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="Encoding" FontSize="12" FontWeight="Bold" Margin="0,12,0,0"
                                   Foreground="{DynamicResource MahApps.Brushes.Accent2}"/>
                        <ComboBox DisplayMemberPath="Text" SelectedValuePath="Value"
                                  ItemsSource="{StaticResource ImageEncodings}"
                                  SelectedValue="{Binding ImageEncoding}"/>
                        <TextBlock Text="Default Sampler" FontSize="12" FontWeight="Bold" Margin="0,12,0,0"
                                   Foreground="{DynamicResource MahApps.Brushes.Accent2}"/>
                        <controls:ComboBoxEx DisplayMemberPath="Text" SelectedValuePath="Value" Placeholder="Nearest"
                                             PlaceholderForeground="{DynamicResource MahApps.Brushes.Accent2}"
                                             ItemsSource="{StaticResource Samplers}"
                                             SelectedValue="{Binding EncodingSampler, Mode=TwoWay}"/>
                        <DataGrid AutoGenerateColumns="False" Margin="0,12,0,0" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False"
                                  CanUserResizeRows="False" CanUserResizeColumns="True" CanUserSortColumns="False"
                                  ItemsSource="{Binding EncodingChannels, Mode=OneTime}">
                            <DataGrid.Resources>
                                <Style TargetType="controls:ComboBoxEx" BasedOn="{StaticResource MahApps.Styles.ComboBox}">
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="PlaceholderForeground" Value="Blue"/>
                                </Style>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource MahApps.Styles.DataGridCell}">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="Transparent" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Channel" Width="auto">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <StackPanel Orientation="Horizontal">
                                                <Button Width="16" Height="16" Margin="2" Padding="0" ToolTip="Clear Values" Click="OnTextureResetButtonClick">
                                                    <iconPacks:PackIconFontAwesome Kind="EraserSolid" VerticalAlignment="Center" HorizontalAlignment="Center" Width="12" />
                                                    <Button.Style>
                                                        <Style TargetType="Button">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                            <Setter Property="Foreground" Value="Gray"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Foreground" Value="White"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <TextBlock Margin="2" VerticalAlignment="Center"
                                                           Text="{Binding Path=Label, Mode=OneTime}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Texture" MinWidth="80">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <Grid>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Text="{Binding Texture, Mode=OneWay, Converter={StaticResource TextureLabelConverter}}"
                                                           Visibility="{Binding Texture, Mode=OneWay, Converter={StaticResource NotNullToVisibilityConverter}}"/>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontStyle="Italic"
                                                           Text="{Binding TextureDefault, Mode=OneWay, Converter={StaticResource TextureLabelConverter}}"
                                                           Visibility="{Binding Texture, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <controls:ComboBoxEx DisplayMemberPath="Text" SelectedValuePath="Value" HorizontalContentAlignment="Center" IsTabStop="False"
                                                                 ItemsSource="{StaticResource TextureTags}"
                                                                 Placeholder="{Binding TextureDefault, Mode=OneWay, Converter={StaticResource TextureLabelConverter}}"
                                                                 SelectedValue="{Binding Texture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Color" MinWidth="80">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <Grid>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Text="{Binding Color, Mode=OneWay}"
                                                           Visibility="{Binding Color, Mode=OneWay, Converter={StaticResource NotNullToVisibilityConverter}}"/>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontStyle="Italic"
                                                           Text="{Binding ColorDefault, Mode=OneWay}"
                                                           Visibility="{Binding Color, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <controls:ComboBoxEx x:Name="ColorListBox" DisplayMemberPath="Text" SelectedValuePath="Value" HorizontalContentAlignment="Center" IsTabStop="False"
                                                                 ItemsSource="{StaticResource ColorChannels}"
                                                                 Placeholder="{Binding ColorDefault, Mode=OneWay}"
                                                                 SelectedValue="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Texture}" Value="{x:Static textures:TextureTags.Normal}">
                                                    <Setter TargetName="ColorListBox" Property="ItemsSource" Value="{StaticResource NormalColorChannels}"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Sampler" MinWidth="80">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <Grid>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                           Text="{Binding Sampler, Mode=OneWay, Converter={StaticResource SamplerLabelConverter}}"
                                                           Visibility="{Binding Sampler, Mode=OneWay, Converter={StaticResource NotNullToVisibilityConverter}}"/>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                           Text="{Binding SamplerDefault, Mode=OneWay, Converter={StaticResource SamplerLabelConverter}}"
                                                           Visibility="{Binding Sampler, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <controls:ComboBoxEx DisplayMemberPath="Text" SelectedValuePath="Value" HorizontalContentAlignment="Center" IsTabStop="False"
                                                                 ItemsSource="{StaticResource Samplers}"
                                                                 Placeholder="{Binding SamplerDefault, Mode=OneWay, Converter={StaticResource SamplerLabelConverter}}"
                                                                 SelectedValue="{Binding Sampler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Value Min" MinWidth="80">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <Grid>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                           Text="{Binding MinValue, Mode=OneWay}"
                                                           Visibility="{Binding MinValue, Mode=OneWay, Converter={StaticResource NotNullToVisibilityConverter}}"/>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                           Text="{Binding MinValueDefault, Mode=OneWay}"
                                                           Visibility="{Binding MinValue, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <controls:TextBoxEx HorizontalContentAlignment="Center" IsTabStop="False"
                                                                Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                                PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                                Placeholder="{Binding MinValueDefault, Mode=OneWay}"
                                                                Text="{Binding MinValue, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Value Max" MinWidth="80">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <Grid>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                           Text="{Binding MaxValue, Mode=OneWay}"
                                                           Visibility="{Binding MaxValue, Mode=OneWay, Converter={StaticResource NotNullToVisibilityConverter}}"/>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                           Text="{Binding MaxValueDefault, Mode=OneWay}"
                                                           Visibility="{Binding MaxValue, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <controls:TextBoxEx HorizontalContentAlignment="Center" IsTabStop="False"
                                                                Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                                PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                                Placeholder="{Binding MaxValueDefault, Mode=OneWay}"
                                                                Text="{Binding MaxValue, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Range Min" MinWidth="80">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <Grid>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                           Text="{Binding RangeMin, Mode=OneWay}"
                                                           Visibility="{Binding RangeMin, Mode=OneWay, Converter={StaticResource NotNullToVisibilityConverter}}"/>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                           Text="{Binding RangeMinDefault, Mode=OneWay}"
                                                           Visibility="{Binding RangeMin, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <controls:TextBoxEx HorizontalContentAlignment="Center" IsTabStop="False"
                                                                Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                                PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                                Placeholder="{Binding RangeMinDefault, Mode=OneWay}"
                                                                Text="{Binding RangeMin, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Range Max" MinWidth="80">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <Grid>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                           Text="{Binding RangeMax, Mode=OneWay}"
                                                           Visibility="{Binding RangeMax, Mode=OneWay, Converter={StaticResource NotNullToVisibilityConverter}}"/>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                           Text="{Binding RangeMaxDefault, Mode=OneWay}"
                                                           Visibility="{Binding RangeMax, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <controls:TextBoxEx HorizontalContentAlignment="Center" IsTabStop="False"
                                                                Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                                PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                                Placeholder="{Binding RangeMax, Mode=OneWay}"
                                                                Text="{Binding RangeMax, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Shift" MinWidth="80">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <Grid>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                           Text="{Binding Shift, Mode=OneWay}"
                                                           Visibility="{Binding Shift, Mode=OneWay, Converter={StaticResource NotNullToVisibilityConverter}}"/>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                           Text="{Binding ShiftDefault, Mode=OneWay}"
                                                           Visibility="{Binding Shift, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <controls:TextBoxEx HorizontalContentAlignment="Center" IsTabStop="False"
                                                                Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                                PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                                Placeholder="{Binding ShiftDefault, Mode=OneWay}"
                                                                Text="{Binding Shift, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Power">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <Grid>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                           Text="{Binding Power, Mode=OneWay}"
                                                           Visibility="{Binding Power, Mode=OneWay, Converter={StaticResource NotNullToVisibilityConverter}}"/>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                           Text="{Binding PowerDefault, Mode=OneWay}"
                                                           Visibility="{Binding Power, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <controls:TextBoxEx HorizontalContentAlignment="Center"
                                                                Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                                PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                                Placeholder="{Binding PowerDefault, Mode=OneWay}"
                                                                Text="{Binding Power, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <!--<DataGridTemplateColumn Header="Perceptual" Width="80">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <controls:CheckBoxEx HorizontalAlignment="Center"
                                                      Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                      Placeholder="{Binding PerceptualDefault, Mode=OneWay}"
                                                      IsChecked="{Binding Perceptual, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>-->
                                <DataGridTemplateColumn Header="Invert" Width="80">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="vm:OutputChannelMapping">
                                            <controls:CheckBoxEx HorizontalAlignment="Center"
                                                                 Placeholder="{Binding InvertDefault, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                                 IsChecked="{Binding Invert, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Textures">
                <TabControl mah:HeaderedControlHelper.HeaderFontSize="18">
                    <TabControl.Resources>
                        <Style x:Key="FieldLabelStyle" TargetType="TextBlock" BasedOn="{StaticResource MahApps.Styles.TextBlock}">
                            <Setter Property="FontSize" Value="14"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent2}"/>
                        </Style>
                        <Style x:Key="DescriptionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource MahApps.Styles.TextBlock}">
                            <Setter Property="Margin" Value="0,4,0,20"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
                        </Style>
                        <Style TargetType="controls:TextBoxEx" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
                            <Setter Property="PlaceholderForeground" Value="{DynamicResource MahApps.Brushes.Accent2}"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="Sizing">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="8" Orientation="Vertical">
                                <TextBlock Text="Texture Size" Style="{StaticResource FieldLabelStyle}"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" MaxWidth="200"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding TextureSize, Mode=TwoWay, Converter={StaticResource NullableConverter}}"/>
                                </Grid>
                                <TextBlock Style="{StaticResource DescriptionTextStyle}"
                                           Text="When defined this value will be used as the target width when publishing textures. Height is preserved through aspect ratio."/>
                                <TextBlock Text="Block Texture Size" Style="{StaticResource FieldLabelStyle}"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" MaxWidth="200"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding BlockTextureSize, Mode=TwoWay, Converter={StaticResource NullableConverter}}"/>
                                </Grid>
                                <TextBlock Style="{StaticResource DescriptionTextStyle}"
                                           Text="When defined this value will be used as the target width when publishing textures located in 'block' folders. Height is preserved through aspect ratio. This overrides the above 'Texture Size' value."/>
                                <TextBlock Text="Texture Scale" Style="{StaticResource FieldLabelStyle}"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" MaxWidth="200"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding TextureScale, Mode=TwoWay, Converter={StaticResource NullableConverter}}"/>
                                </Grid>
                                <TextBlock Style="{StaticResource DescriptionTextStyle}"
                                           Text="When defined this value will be used as the scale to apply when publishing textures. If block/texture-size is defined it will supersede this value."/>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="Normal">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="8" Orientation="Vertical">
                                <CheckBox IsChecked="{Binding AutoGenerateNormal, Mode=TwoWay}">
                                    <TextBlock Text="Generate Automatically" Style="{StaticResource FieldLabelStyle}"/>
                                </CheckBox>
                                <TextBlock Style="{StaticResource DescriptionTextStyle}"
                                           Text="When enabled materials that are missing a normal texture will attempt to generate it from the height texture."/>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="Occlusion">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="8" Orientation="Vertical">
                                <CheckBox IsChecked="{Binding AutoGenerateOcclusion, Mode=TwoWay}">
                                    <TextBlock Text="Generate Automatically" Style="{StaticResource FieldLabelStyle}"/>
                                </CheckBox>
                                <TextBlock Style="{StaticResource DescriptionTextStyle}"
                                           Text="When enabled materials that are missing an occlusion texture will attempt to generate it from the height texture."/>
                                <TextBlock Text="Ray Quality" Style="{StaticResource FieldLabelStyle}"/>
                                <controls:TextBoxEx Placeholder="{Binding OcclusionQualityDefault, Mode=OneTime}"
                                                    Text="{Binding OcclusionQuality, Mode=TwoWay, Converter={StaticResource NullableConverter}}"/>
                                <TextBlock Style="{StaticResource DescriptionTextStyle}"
                                           Text="Defines the number of rays to cast per-pixel as a percentage of a hemisphere. A value of 0 will cast 5 rays, and a value of 0.1 is 348 rays."/>
                                <TextBlock Text="Ray Power" Style="{StaticResource FieldLabelStyle}"/>
                                <controls:TextBoxEx Placeholder="{Binding OcclusionPowerDefault, Mode=OneTime}"
                                                    Text="{Binding OcclusionPower, Mode=TwoWay, Converter={StaticResource NullableConverter}}"/>
                                <TextBlock Style="{StaticResource DescriptionTextStyle}"
                                           Text="Defines the power to apply to ray intersections. The default is 1 for a linear falloff; a value of 0.5 will reduce AO density, and values over 1 will increase density."/>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </TabItem>
        </TabControl>
    </Grid>
</mah:MetroWindow>
