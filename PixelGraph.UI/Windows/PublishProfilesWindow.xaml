<Window x:Class="PixelGraph.UI.Windows.PackProfilesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:PixelGraph.UI.ViewModels"
        xmlns:controls="clr-namespace:PixelGraph.UI.Controls"
        xmlns:converters="clr-namespace:PixelGraph.UI.Converters"
        xmlns:textures="clr-namespace:PixelGraph.Common.Textures;assembly=PixelGraph.Common"
        xmlns:vd="clr-namespace:PixelGraph.UI.ViewData"
        xmlns:fa5="http://schemas.fontawesome.com/icons/"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        Title="Publishing Profiles" Width="1000" Height="800" mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        d:DataContext="{d:DesignInstance vm:ProfilesDesignVM, IsDesignTimeCreatable=True}"
        WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <vd:OptionalEncodingFormatValues x:Key="Formats"/>
        <vd:OptionalTextureTagValues x:Key="TextureTags"/>
        <vd:OptionalColorChannelValues x:Key="ColorChannels"/>
        <vd:NormalColorChannelValues x:Key="NormalColorChannels"/>
        <vd:SamplerValues x:Key="Samplers"/>
        <converters:NullableConverter x:Key="NullableConverter"/>
        <converters:TextureLabelConverter x:Key="TextureLabelConverter"/>
        <converters:SamplerLabelConverter x:Key="SamplerLabelConverter"/>
    </Window.Resources>
    <Window.DataContext>
        <vm:PublishProfilesVM x:Name="VM" DataChanged="OnDataChanged"/>
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="260"/>
            <ColumnDefinition Width="3"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <DockPanel>
            <ToolBar DockPanel.Dock="Top" ToolBarTray.IsLocked="True">
                <Button ToolTip="New Profile" Width="32" Height="28" Padding="0" Click="OnNewProfileClick" Foreground="LawnGreen"
                        Content="{iconPacks:FontAwesome Kind=PlusSolid}"/>
                <Button ToolTip="Duplicate Profile" Width="32" Height="28" Padding="0" Click="OnDuplicateProfileClick" Foreground="DeepSkyBlue"
                        Content="{iconPacks:FontAwesome Kind=CopySolid}"
                        IsEnabled="{Binding HasSelectedProfile, Mode=OneWay}"/>
                <Button ToolTip="Delete Profile" Width="32" Height="28" Padding="0" Click="OnDeleteProfileClick" Foreground="Red"
                        Content="{iconPacks:FontAwesome Kind=TrashSolid}"
                        IsEnabled="{Binding HasSelectedProfile, Mode=OneWay}">
                </Button>
            </ToolBar>
            <ListBox x:Name="ProfileListBox" DisplayMemberPath="Name" Width="320" Background="Black" MouseDown="OnProfileListBoxMouseDown" SelectionChanged="OnProfileSelectionChanged"
                     ItemsSource="{Binding Profiles, Mode=OneWay}"
                     SelectedItem="{Binding SelectedProfileItem, Mode=TwoWay}"/>
        </DockPanel>
        <GridSplitter Grid.Column="1" Background="{DynamicResource MaterialDesignDarkForeground}" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" ShowsPreview="True" HorizontalAlignment="Stretch"/>
        <TabControl Grid.Column="2" Style="{StaticResource MaterialDesignTabControl}"
                    IsEnabled="{Binding HasSelectedProfile, Mode=OneWay}">
            <TabItem Header="Metadata">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Background="#222">
                    <Grid Margin="12,12,12,12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Margin="4" VerticalAlignment="Center" Text="Game Edition" FontSize="14" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <ComboBox Grid.Column="1" Grid.Row="0" SelectedValuePath="Content" Margin="4" TextBlock.FontSize="14" HorizontalContentAlignment="Center"
                                  Foreground="{DynamicResource SecondaryHueMidBrush}"
                                  SelectedValue="{Binding GameEdition}">
                            <ComboBoxItem Content="Java"/>
                            <ComboBoxItem Content="Bedrock"/>
                        </ComboBox>
                        <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" Text="Pack Version" FontSize="14" Foreground="{DynamicResource PrimaryHueMidBrush}" Margin="4,4,4,4" HorizontalAlignment="Right"/>
                        <TextBox Grid.Column="3" Grid.Row="0" Margin="4" HorizontalContentAlignment="Center" Width="64" HorizontalAlignment="Right"
                                 Foreground="{DynamicResource SecondaryHueMidBrush}"
                                 Text="{Binding PackFormat}"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Margin="4" VerticalAlignment="Center" Text="Description" FontSize="14" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <TextBox Grid.Column="1" Grid.Row="1" Margin="4" Grid.ColumnSpan="3"
                                 Foreground="{DynamicResource SecondaryHueMidBrush}"
                                 Text="{Binding PackDescription}"/>
                        <TextBlock Grid.Column="0" Grid.Row="2" Margin="4" VerticalAlignment="Center" Text="Tags" FontSize="14" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <TextBox Grid.Column="1" Grid.Row="2" Margin="4" Grid.ColumnSpan="3"
                                 Foreground="{DynamicResource SecondaryHueMidBrush}"
                                 Text="{Binding PackTags}"/>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Encoding">
                <DockPanel>
                    <Grid DockPanel.Dock="Top" Margin="12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <DockPanel Grid.Column="0">
                            <TextBlock DockPanel.Dock="Left" Margin="8,0" Text="Format" VerticalAlignment="Center"
                                       Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                            <ComboBox DisplayMemberPath="Text" SelectedValuePath="Value" MaxWidth="140" HorizontalContentAlignment="Center"
                                      Foreground="{DynamicResource SecondaryHueMidBrush}"
                                      ItemsSource="{StaticResource Formats}"
                                      SelectedValue="{Binding EncodingFormat}"/>
                        </DockPanel>
                        <DockPanel Grid.Column="1">
                            <TextBlock DockPanel.Dock="Left" Margin="8,0" Text="Default Sampler" VerticalAlignment="Center"
                                       Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                            <controls:ComboBoxEx DisplayMemberPath="Text" SelectedValuePath="Value" MaxWidth="140" HorizontalContentAlignment="Center" Placeholder="Nearest"
                                                 PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                 Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                 ItemsSource="{StaticResource Samplers}"
                                                 SelectedValue="{Binding EncodingSampler, Mode=TwoWay}"/>
                        </DockPanel>
                    </Grid>
                    <DataGrid AutoGenerateColumns="False" Margin="4" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False"
                              CanUserResizeRows="False" CanUserResizeColumns="True" CanUserSortColumns="False"
                              ItemsSource="{Binding EncodingChannels, Mode=OneTime}">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}"/>
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.Resources>
                            <Style TargetType="controls:ComboBoxEx" BasedOn="{StaticResource MaterialDesignComboBox}">
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                                <Setter Property="PlaceholderForeground" Value="{DynamicResource SecondaryHueDarkBrush}"/>
                            </Style>
                            <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource MaterialDesignDataGridRowHoverBackground}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="Transparent" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Channel" Width="auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <StackPanel Orientation="Horizontal">
                                            <Button Width="16" Height="16" Margin="2" Padding="0" ToolTip="Clear Values" Click="OnTextureResetButtonClick">
                                                <fa5:SvgAwesome Icon="Solid_Eraser" VerticalAlignment="Center" HorizontalAlignment="Center" Width="12" />
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatAccentButton}">
                                                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignToolForeground}"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <TextBlock Margin="2" VerticalAlignment="Center"
                                                       Text="{Binding Path=Label, Mode=OneTime}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Texture" MinWidth="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <Grid>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                       Text="{Binding Texture, Mode=OneWay, Converter={StaticResource TextureLabelConverter}}"
                                                       Visibility="{Binding Texture, Mode=OneWay, Converter={StaticResource notNullToVisibilityConverter}}"/>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                       Text="{Binding TextureDefault, Mode=OneWay, Converter={StaticResource TextureLabelConverter}}"
                                                       Visibility="{Binding Texture, Mode=OneWay, Converter={StaticResource nullToVisibleConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:ComboBoxEx DisplayMemberPath="Text" SelectedValuePath="Value" HorizontalContentAlignment="Center" IsTabStop="False"
                                                             ItemsSource="{StaticResource TextureTags}"
                                                             Placeholder="{Binding TextureDefault, Mode=OneWay, Converter={StaticResource TextureLabelConverter}}"
                                                             SelectedValue="{Binding Texture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Color" MinWidth="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <Grid>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                       Text="{Binding Color, Mode=OneWay}"
                                                       Visibility="{Binding Color, Mode=OneWay, Converter={StaticResource notNullToVisibilityConverter}}"/>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                       Text="{Binding ColorDefault, Mode=OneWay}"
                                                       Visibility="{Binding Color, Mode=OneWay, Converter={StaticResource nullToVisibleConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:ComboBoxEx x:Name="ColorListBox" DisplayMemberPath="Text" SelectedValuePath="Value" HorizontalContentAlignment="Center" IsTabStop="False"
                                                             ItemsSource="{StaticResource ColorChannels}"
                                                             Placeholder="{Binding ColorDefault, Mode=OneWay}"
                                                             SelectedValue="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Texture}" Value="{x:Static textures:TextureTags.Normal}">
                                                <Setter TargetName="ColorListBox" Property="ItemsSource" Value="{StaticResource NormalColorChannels}"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Sampler" MinWidth="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <Grid>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                       Text="{Binding Sampler, Mode=OneWay, Converter={StaticResource SamplerLabelConverter}}"
                                                       Visibility="{Binding Sampler, Mode=OneWay, Converter={StaticResource notNullToVisibilityConverter}}"/>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                       Text="{Binding SamplerDefault, Mode=OneWay, Converter={StaticResource SamplerLabelConverter}}"
                                                       Visibility="{Binding Sampler, Mode=OneWay, Converter={StaticResource nullToVisibleConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:ComboBoxEx DisplayMemberPath="Text" SelectedValuePath="Value" HorizontalContentAlignment="Center" IsTabStop="False"
                                                             ItemsSource="{StaticResource Samplers}"
                                                             Placeholder="{Binding SamplerDefault, Mode=OneWay, Converter={StaticResource SamplerLabelConverter}}"
                                                             SelectedValue="{Binding Sampler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Value Min" MinWidth="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <Grid>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                       Text="{Binding MinValue, Mode=OneWay}"
                                                       Visibility="{Binding MinValue, Mode=OneWay, Converter={StaticResource notNullToVisibilityConverter}}"/>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                       Text="{Binding MinValueDefault, Mode=OneWay}"
                                                       Visibility="{Binding MinValue, Mode=OneWay, Converter={StaticResource nullToVisibleConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:TextBoxEx HorizontalContentAlignment="Center" IsTabStop="False"
                                                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                            PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                            Placeholder="{Binding MinValueDefault, Mode=OneWay}"
                                                            Text="{Binding MinValue, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Value Max" MinWidth="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <Grid>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                       Text="{Binding MaxValue, Mode=OneWay}"
                                                       Visibility="{Binding MaxValue, Mode=OneWay, Converter={StaticResource notNullToVisibilityConverter}}"/>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                       Text="{Binding MaxValueDefault, Mode=OneWay}"
                                                       Visibility="{Binding MaxValue, Mode=OneWay, Converter={StaticResource nullToVisibleConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:TextBoxEx HorizontalContentAlignment="Center" IsTabStop="False"
                                                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                            PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                            Placeholder="{Binding MaxValueDefault, Mode=OneWay}"
                                                            Text="{Binding MaxValue, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Range Min" MinWidth="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <Grid>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                       Text="{Binding RangeMin, Mode=OneWay}"
                                                       Visibility="{Binding RangeMin, Mode=OneWay, Converter={StaticResource notNullToVisibilityConverter}}"/>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                       Text="{Binding RangeMinDefault, Mode=OneWay}"
                                                       Visibility="{Binding RangeMin, Mode=OneWay, Converter={StaticResource nullToVisibleConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:TextBoxEx HorizontalContentAlignment="Center" IsTabStop="False"
                                                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                            PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                            Placeholder="{Binding RangeMinDefault, Mode=OneWay}"
                                                            Text="{Binding RangeMin, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Range Max" MinWidth="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <Grid>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                       Text="{Binding RangeMax, Mode=OneWay}"
                                                       Visibility="{Binding RangeMax, Mode=OneWay, Converter={StaticResource notNullToVisibilityConverter}}"/>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                       Text="{Binding RangeMaxDefault, Mode=OneWay}"
                                                       Visibility="{Binding RangeMax, Mode=OneWay, Converter={StaticResource nullToVisibleConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:TextBoxEx HorizontalContentAlignment="Center" IsTabStop="False"
                                                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                            PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                            Placeholder="{Binding RangeMax, Mode=OneWay}"
                                                            Text="{Binding RangeMax, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Shift" MinWidth="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <Grid>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                       Text="{Binding Shift, Mode=OneWay}"
                                                       Visibility="{Binding Shift, Mode=OneWay, Converter={StaticResource notNullToVisibilityConverter}}"/>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                       Text="{Binding ShiftDefault, Mode=OneWay}"
                                                       Visibility="{Binding Shift, Mode=OneWay, Converter={StaticResource nullToVisibleConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:TextBoxEx HorizontalContentAlignment="Center" IsTabStop="False"
                                                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                            PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                            Placeholder="{Binding ShiftDefault, Mode=OneWay}"
                                                            Text="{Binding Shift, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Power">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <Grid>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                       Text="{Binding Power, Mode=OneWay}"
                                                       Visibility="{Binding Power, Mode=OneWay, Converter={StaticResource notNullToVisibilityConverter}}"/>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{DynamicResource SecondaryHueDarkBrush}" FontStyle="Italic"
                                                       Text="{Binding PowerDefault, Mode=OneWay}"
                                                       Visibility="{Binding Power, Mode=OneWay, Converter={StaticResource nullToVisibleConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:TextBoxEx HorizontalContentAlignment="Center"
                                                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                            PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                            Placeholder="{Binding PowerDefault, Mode=OneWay}"
                                                            Text="{Binding Power, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <!--<DataGridTemplateColumn Header="Perceptual" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:CheckBoxEx HorizontalAlignment="Center"
                                                  Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                  Placeholder="{Binding PerceptualDefault, Mode=OneWay}"
                                                  IsChecked="{Binding Perceptual, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>-->
                            <DataGridTemplateColumn Header="Invert" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:CheckBoxEx HorizontalAlignment="Center"
                                                             Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                             Placeholder="{Binding InvertDefault, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                             IsChecked="{Binding Invert, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Textures">
                <StackPanel Margin="8" Orientation="Vertical">
                    <StackPanel.Resources>
                        <Style x:Key="SectionLabelStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignTextBlock}">
                            <Setter Property="FontSize" Value="20"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            <Setter Property="Margin" Value="0,8,0,0"/>
                        </Style>
                        <Style x:Key="FieldLabelStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignTextBlock}">
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                        </Style>
                        <Style x:Key="DescriptionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignTextBlock}">
                            <Setter Property="Margin" Value="0,4,0,20"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="Foreground" Value="#AAA"/>
                        </Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                            <Setter Property="Width" Value="200"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                        </Style>
                        <Style TargetType="controls:TextBoxEx" BasedOn="{StaticResource MaterialDesignTextBox}">
                            <Setter Property="Width" Value="200"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                            <Setter Property="PlaceholderForeground" Value="{DynamicResource SecondaryHueDarkBrush}"/>
                        </Style>
                    </StackPanel.Resources>
                    <!-- Sizing -->
                    <TextBlock Text="Sizing" Style="{StaticResource SectionLabelStyle}"/>
                    <Rectangle Margin="0,4" Height="2" Fill="#111"/>
                    <DockPanel>
                        <TextBox DockPanel.Dock="Right"
                                 Text="{Binding TextureSize, Mode=TwoWay, Converter={StaticResource NullableConverter}}"/>
                        <TextBlock Text="Texture Size" Style="{StaticResource FieldLabelStyle}"/>
                    </DockPanel>
                    <TextBlock Style="{StaticResource DescriptionTextStyle}"
                               Text="When defined this value will be used as the target width when publishing textures. Height is preserved through aspect ratio."/>
                    <DockPanel>
                        <TextBox DockPanel.Dock="Right"
                                 Text="{Binding BlockTextureSize, Mode=TwoWay, Converter={StaticResource NullableConverter}}"/>
                        <TextBlock Text="Block Texture Size" Style="{StaticResource FieldLabelStyle}"/>
                    </DockPanel>
                    <TextBlock Style="{StaticResource DescriptionTextStyle}"
                               Text="When defined this value will be used as the target width when publishing textures located in 'block' folders. Height is preserved through aspect ratio. This overrides the above 'Texture Size' value."/>
                    <DockPanel>
                        <TextBox DockPanel.Dock="Right"
                                 Text="{Binding TextureScale, Mode=TwoWay, Converter={StaticResource NullableConverter}}"/>
                        <TextBlock Text="Texture Scale" Style="{StaticResource FieldLabelStyle}"/>
                    </DockPanel>
                    <TextBlock Style="{StaticResource DescriptionTextStyle}"
                               Text="When defined this value will be used as the scale to apply when publishing textures. If block/texture-size is defined it will supersede this value."/>
                    <!-- Normal -->
                    <TextBlock Text="Normals" Style="{StaticResource SectionLabelStyle}"/>
                    <Rectangle Margin="0,4" Height="2" Fill="#111"/>
                    <DockPanel>
                        <Grid DockPanel.Dock="Right" Width="200">
                            <CheckBox HorizontalAlignment="Center"
                                      IsChecked="{Binding AutoGenerateNormal, Mode=TwoWay}"/>
                        </Grid>
                        <TextBlock Text="Generate Automatically" Style="{StaticResource FieldLabelStyle}"/>
                    </DockPanel>
                    <TextBlock Style="{StaticResource DescriptionTextStyle}"
                               Text="When enabled materials that are missing a normal texture will attempt to generate it from the height texture."/>
                    <!-- Occlusion -->
                    <TextBlock Text="Occlusion" Style="{StaticResource SectionLabelStyle}"/>
                    <Rectangle Margin="0,4" Height="2" Fill="#111"/>
                    <DockPanel>
                        <Grid DockPanel.Dock="Right" Width="200">
                            <CheckBox HorizontalAlignment="Center"
                                      IsChecked="{Binding AutoGenerateOcclusion, Mode=TwoWay}"/>
                        </Grid>
                        <TextBlock Text="Generate Automatically" Style="{StaticResource FieldLabelStyle}"/>
                    </DockPanel>
                    <TextBlock Style="{StaticResource DescriptionTextStyle}"
                               Text="When enabled materials that are missing an occlusion texture will attempt to generate it from the height texture."/>
                    <DockPanel>
                        <controls:TextBoxEx DockPanel.Dock="Right"
                                            Placeholder="{Binding OcclusionQualityDefault, Mode=OneTime}"
                                            Text="{Binding OcclusionQuality, Mode=TwoWay, Converter={StaticResource NullableConverter}}"/>
                        <TextBlock Text="Quality" Style="{StaticResource FieldLabelStyle}"/>
                    </DockPanel>
                    <TextBlock Style="{StaticResource DescriptionTextStyle}"
                               Text="Defines the number of rays to cast per-pixel as a percentage of a hemisphere. A value of 0 will cast 5 rays, and a value of 0.1 is 348 rays."/>
                    <DockPanel>
                        <controls:TextBoxEx DockPanel.Dock="Right"
                                            Placeholder="{Binding OcclusionPowerDefault, Mode=OneTime}"
                                            Text="{Binding OcclusionPower, Mode=TwoWay, Converter={StaticResource NullableConverter}}"/>
                        <TextBlock Text="Power" Style="{StaticResource FieldLabelStyle}"/>
                    </DockPanel>
                    <TextBlock Style="{StaticResource DescriptionTextStyle}"
                               Text="Defines the power to apply to ray intersections. The default is 1 for a linear falloff; a value of 0.5 will reduce AO density, and values over 1 will increase density."/>
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
