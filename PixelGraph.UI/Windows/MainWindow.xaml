<mde:MaterialWindow x:Class="PixelGraph.UI.Windows.MainWindow"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:vm="clr-namespace:PixelGraph.UI.ViewModels"
                    xmlns:controls="clr-namespace:PixelGraph.UI.Controls"
                    xmlns:converters="clr-namespace:PixelGraph.UI.Converters"
                    xmlns:mde="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions"
                    d:DataContext="{d:DesignInstance vm:MainWindowDesignVM, IsDesignTimeCreatable=True}"
                    Title="PixelGraph" Height="600" Width="1000" mc:Ignorable="d" Loaded="OnWindowLoaded"
                    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                    TextElement.FontWeight="Regular"
                    TextElement.FontSize="13"
                    TextOptions.TextFormattingMode="Ideal" 
                    TextOptions.TextRenderingMode="Auto"        
                    Background="{DynamicResource MaterialDesignPaper}"
                    FontFamily="{DynamicResource MaterialDesignFont}" WindowState="Maximized">
    <Window.Resources>
        <converters:VisibilityConverter x:Key="VisibilityConverter"/>
        <converters:VisibilityInverseConverter x:Key="VisibilityInverseConverter"/>
    </Window.Resources>
    <DockPanel>
        <DockPanel DockPanel.Dock="Top" LastChildFill="False">
            <DockPanel.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF272727"/>
                    <GradientStop Color="#FF343434" Offset="1"/>
                </LinearGradientBrush>
            </DockPanel.Background>
            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Margin="2">
                <Button Padding="8,0" Height="24" Click="OnOpenClick"
                        ToolTip="Open a Directory">
                    <md:PackIcon Kind="FolderOpen"/>
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                            <Setter Property="md:ButtonAssist.CornerRadius" Value="3,0,0,3"/>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="{md:PackIcon ArrowDropDown}" Height="24" Margin="1,0,0,0" Padding="0"
                        IsEnabled="{Binding HasRootDirectory, Mode=OneWay}">
                    <Button.ContextMenu>
                        <ContextMenu PlacementRectangle="{Binding RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="Import Folder" Click="OnImportFolderClick"/>
                            <MenuItem Header="Import ZIP" Click="OnImportZipClick"/>
                        </ContextMenu>
                    </Button.ContextMenu>
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                            <Setter Property="md:ButtonAssist.CornerRadius" Value="0,3,3,0"/>
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Click">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            <Button DockPanel.Dock="Left" Style="{DynamicResource MaterialDesignFlatButton}" Height="24" Padding="8,0" Margin="2" IsEnabled="False" Click="OnSettingsClick"
                    ToolTip="Edit Application Settings">
                <md:PackIcon Kind="Settings"/>
            </Button>
            <Button DockPanel.Dock="Left" Style="{DynamicResource MaterialDesignFlatButton}" Height="24" Padding="8,0" Margin="2" Click="OnDocumentationButtonClick"
                    ToolTip="View Online Documentation">
                <md:PackIcon Kind="Help"/>
            </Button>
            <Button DockPanel.Dock="Left" Style="{DynamicResource MaterialDesignFlatButton}" Height="24" Padding="8,0" Margin="12,2,2,2" Click="OnContentEncodingMenuItemClick"
                    ToolTip="Edit Input Encoding"
                    IsEnabled="{Binding HasRootDirectory, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <md:PackIcon Kind="Palette"/>
                    <TextBlock Margin="4,0,0,0" Text="Input"/>
                </StackPanel>
            </Button>
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal"
                        IsEnabled="{Binding HasRootDirectory, Mode=OneWay}">
                <Button Content="{md:PackIcon Edit}" ToolTip="Manage Profiles" Width="28" Height="24" Padding="0" Margin="2" Click="OnProfilesClick"
                        Style="{DynamicResource MaterialDesignFlatButton}"/>
                <ComboBox Width="180" Margin="6,0,2,2" DisplayMemberPath="Name"
                          ItemsSource="{Binding Profiles, Mode=OneWay}"/>
                <StackPanel Orientation="Horizontal" Margin="2,2,6,2">
                    <Button Content="Publish" Height="24" Padding="8,0" Click="OnPublishMenuItemClick">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                <Setter Property="md:ButtonAssist.CornerRadius" Value="3,0,0,3"/>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="{md:PackIcon ArrowDropDown}" Height="24" Margin="1,0,0,0" Padding="0">
                        <Button.Resources>
                            <Popup x:Key="PublishPopup">
                                <TextBlock Text="Hello World!"/>
                            </Popup>
                        </Button.Resources>
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                <Setter Property="md:ButtonAssist.CornerRadius" Value="0,3,3,0"/>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </StackPanel>
        </DockPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black"/>
                    <GradientStop Color="#111" Offset="1"/>
                </LinearGradientBrush>
            </StatusBar.Background>
            <StatusBarItem>
                <TextBlock Text="{Binding RootDirectory, Mode=OneWay}" Foreground="{DynamicResource SecondaryHueDarkBrush}"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <ProgressBar Width="90" IsIndeterminate="True" Visibility="{Binding IsBusy, Converter={StaticResource VisibilityConverter}}"/>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid Visibility="{Binding HasRootDirectory, Mode=OneWay, Converter={StaticResource VisibilityInverseConverter}}">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" MaxWidth="800">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Button Margin="2" Style="{DynamicResource MaterialDesignIconButton}" Padding="0,0,0,0" Click="OnOpenClick" Height="40" Width="40">
                        <md:PackIcon Kind="FolderOpen" Height="24" Width="24"/>
                    </Button>
                    <TextBlock Grid.Column="1" Grid.Row="0" Margin="6,2,2,2" Text="Open a Resource Pack directory" Foreground="#FF767676" VerticalAlignment="Center" FontSize="16"/>
                    <ListView Grid.Column="1" Grid.Row="1" x:Name="RecentList" SelectionChanged="OnRecentSelectionChanged"
                             ItemsSource="{Binding RecentDirectories, Mode=OneWay}"/>
                </Grid>
            </Grid>
            <Grid Visibility="{Binding HasRootDirectory, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="280"/>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <DockPanel Grid.Column="0" Background="#FF1B1B1B">
                    <DockPanel DockPanel.Dock="Top">
                        <controls:ToggleButtonEx DockPanel.Dock="Right" Content="{md:PackIcon FileMultiple}" ToolTip="Show All Files" Height="20" Width="20" Margin="6,2,4,1" BorderThickness="1" Padding="2,2,2,2"
                                                 IsChecked="{Binding ShowAllFiles, Mode=TwoWay}"/>
                        <Grid>
                            <TextBox Padding="4,0,12,0"
                                     Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Foreground="{DynamicResource SecondaryHueMidBrush}"/>
                            <md:PackIcon Kind="Search" Margin="2,0" HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="False"
                                         Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        </Grid>
                    </DockPanel>
                    <TreeView SelectedItemChanged="OnTextureTreeSelectedItemChanged"
                             ItemsSource="{Binding TreeRoot.Nodes, Mode=OneWay}">
                        <TreeView.Resources>
                            <DataTemplate DataType="{x:Type vm:ContentTreeFile}">
                                <StackPanel Orientation="Horizontal">
                                    <md:PackIcon Margin="0,0,4,0"
                                                 Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                 Kind="{Binding Icon, Mode=OneWay}">
                                        <md:PackIcon.Style>
                                            <Style TargetType="md:PackIcon">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Type, Mode=OneWay}" Value="{x:Static vm:ContentNodeType.Texture}">
                                                        <Setter Property="Foreground" Value="#F00"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </md:PackIcon.Style>
                                    </md:PackIcon>
                                    <TextBlock Text="{Binding Name, Mode=OneWay}"/>
                                </StackPanel>
                            </DataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type vm:ContentTreeMaterialDirectory}" ItemsSource="{Binding Nodes}">
                                <StackPanel Orientation="Horizontal">
                                    <md:PackIcon Kind="PaletteSwatch" Margin="0,0,4,0" Foreground="{DynamicResource SecondaryHueMidBrush}"/>
                                    <TextBlock Text="{Binding Name}"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type vm:ContentTreeDirectory}" ItemsSource="{Binding Nodes}">
                                <StackPanel Orientation="Horizontal">
                                    <md:PackIcon Kind="Folder" Margin="0,0,4,0" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                                    <TextBlock Text="{Binding Name}"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Visible, Mode=OneWay}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                </DockPanel>
                <GridSplitter Grid.Column="1" Background="{DynamicResource MaterialDesignDarkForeground}" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" ShowsPreview="True" HorizontalAlignment="Stretch"/>
                <Grid Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition Width="280"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.Column="0" Visibility="{Binding HasPreviewImage, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                        <DockPanel DockPanel.Dock="Top" Margin="4,2" LastChildFill="False">
                            <CheckBox DockPanel.Dock="Left" Content="Tile" Foreground="{DynamicResource SecondaryHueMidBrush}"
                                      IsChecked="{Binding EnableTiling, ElementName=TextureViewer}"/>
                            <ComboBox IsEditable="True" DockPanel.Dock="Right"
                                      Style="{StaticResource MaterialDesignComboBox}"
                                      Foreground="{DynamicResource SecondaryHueMidBrush}"
                                      Text="{Binding ZoomText, Mode=TwoWay, ElementName=TextureViewer}">
                                <ComboBoxItem Content="10%"/>
                                <ComboBoxItem Content="25%"/>
                                <ComboBoxItem Content="50%"/>
                                <ComboBoxItem Content="100%" IsSelected="True"/>
                                <ComboBoxItem Content="200%"/>
                                <ComboBoxItem Content="400%"/>
                                <ComboBoxItem Content="800%"/>
                            </ComboBox>
                        </DockPanel>
                        <ListBox DockPanel.Dock="Bottom" Background="Black" VerticalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 SelectionChanged="OnMaterialSourceSelectionChanged"
                                 ItemsSource="{Binding Textures, Mode=OneWay}"
                                 SelectedItem="{Binding SelectedSource, Mode=TwoWay}"
                                 Visibility="{Binding HasLoadedMaterial, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="vm:TextureSource">
                                    <DockPanel MinWidth="12" MaxWidth="86">
                                        <TextBlock DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                                   Text="{Binding Name}"/>
                                        <Border BorderThickness="1" BorderBrush="#666" Width="64" Height="64">
                                            <Border.Background>
                                                <ImageBrush ImageSource="/Resources/tiled_bg.png" Stretch="None" TileMode="Tile" Viewport="0,0,8,8" ViewportUnits="Absolute"/>
                                            </Border.Background>
                                            <Image Stretch="Uniform" Source="{Binding Thumbnail}"/>
                                        </Border>
                                    </DockPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <controls:TextureView x:Name="TextureViewer" Background="#222"
                                              Texture="{Binding LoadedTexture, Mode=OneWay}"/>
                    </DockPanel>
                    <GridSplitter Grid.Column="1" Grid.Row="0" Background="{DynamicResource MaterialDesignDarkForeground}" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" ShowsPreview="True" HorizontalAlignment="Stretch"/>
                    <controls:MaterialPropertiesControl Grid.Column="2" DataChanged="OnMaterialChanged" GenerateNormal="OnGenerateNormal" GenerateOcclusion="OnGenerateOcclusion"
                                                   Material="{Binding LoadedMaterial, Mode=OneWay}"
                                                   SelectedTag="{Binding SelectedTag, Mode=TwoWay}"
                                                   Visibility="{Binding HasLoadedMaterial, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}"/>
                </Grid>
            </Grid>
        </Grid>
    </DockPanel>
</mde:MaterialWindow>
