<mah:MetroWindow x:Class="PixelGraph.UI.Windows.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                 xmlns:vm="clr-namespace:PixelGraph.UI.ViewModels"
                 xmlns:controls="clr-namespace:PixelGraph.UI.Controls"
                 xmlns:converters="clr-namespace:PixelGraph.UI.Converters"
                 xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                 d:DataContext="{d:DesignInstance vm:MainWindowDesignVM, IsDesignTimeCreatable=True}"
                 Title="PixelGraph" Height="600" Width="1000" mc:Ignorable="d" Loaded="OnWindowLoaded" WindowState="Maximized"
                 ShowIconOnTitleBar="True" IconScalingMode="NoScaleSmallerFrame" TitleForeground="Transparent"
                 Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                 Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}">
    <Window.Resources>
        <converters:VisibilityConverter x:Key="VisibilityConverter"/>
        <converters:VisibilityInverseConverter x:Key="VisibilityInverseConverter"/>
        <CollectionViewSource x:Key="PublishLocationsView" Source="{Binding Path=PublishLocations}" />
    </Window.Resources>
    <Window.DataContext>
        <vm:MainWindowVM x:Name="vm"/>
    </Window.DataContext>
    <mah:MetroWindow.IconTemplate>
        <DataTemplate>
            <Grid Width="{TemplateBinding Width}"
                  Height="{TemplateBinding Height}"
                  Margin="4"
                  Background="Transparent"
                  RenderOptions.EdgeMode="Aliased"
                  RenderOptions.BitmapScalingMode="HighQuality">
                <Image Source="/icon.ico"/>
            </Grid>
        </DataTemplate>
    </mah:MetroWindow.IconTemplate>
    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <Menu IsMainMenu="True" Background="Transparent">
                <MenuItem Header="Project" Background="Transparent">
                    <MenuItem Header="New" Icon="{iconPacks:FontAwesome FolderPlusSolid}" Click="OnNewProjectClick"/>
                    <MenuItem Header="Open" Icon="{iconPacks:FontAwesome FolderOpenSolid}" Click="OnOpenClick"/>
                    <MenuItem Header="Close" Icon="{iconPacks:FontAwesome DoorClosedSolid}" Click="OnCloseProjectClick"
                              IsEnabled="{Binding IsProjectLoaded, Mode=OneWay}"/>
                    <Separator/>
                    <!--<MenuItem Header="App Settings" Icon="{md:PackIcon Settings}" Click="OnSettingsClick"/>-->
                    <MenuItem Header="Exit" Icon="{iconPacks:FontAwesome WindowCloseSolid}" Click="OnExitClick"/>
                </MenuItem>
                <MenuItem Header="Pack" Background="Transparent">
                    <MenuItem Header="Publish Locations" Icon="{iconPacks:FontAwesome FolderSolid}" Click="OnLocationsClick"/>
                    <MenuItem Header="Import" Icon="{iconPacks:FontAwesome FileImportSolid}"
                              IsEnabled="{Binding IsProjectLoaded, Mode=OneWay}">
                        <MenuItem Header="From Folder" Icon="{iconPacks:FontAwesome FolderSolid}" Click="OnImportFolderClick"/>
                        <MenuItem Header="From Archive" Icon="{iconPacks:FontAwesome FileArchiveSolid}" Click="OnImportZipClick"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Pack Input" Icon="{iconPacks:FontAwesome PaletteSolid}" Click="OnInputEncodingClick"
                              IsEnabled="{Binding IsProjectLoaded, Mode=OneWay}"/>
                    <MenuItem Header="Publish Profiles" Icon="{iconPacks:FontAwesome BookSolid}" Click="OnProfilesClick"
                              IsEnabled="{Binding IsProjectLoaded, Mode=OneWay}"/>
                </MenuItem>
                <MenuItem Header="Material" Background="Transparent">
                    <MenuItem Header="New" Icon="{iconPacks:FontAwesome PlusSolid}" Click="OnNewMaterialMenuClick"
                              IsEnabled="{Binding IsProjectLoaded, Mode=OneWay}"/>
                    <Separator/>
                    <MenuItem Header="Connections" Icon="{iconPacks:FontAwesome PuzzlePieceSolid}" Click="OnMaterialConnectionsMenuClick"
                              IsEnabled="{Binding HasLoadedMaterial, Mode=OneWay}"/>
                    <MenuItem Header="Filters" Icon="{iconPacks:FontAwesome FilterSolid}" Click="OnMaterialFiltersMenuClick"
                              IsEnabled="{Binding HasLoadedMaterial, Mode=OneWay}"/>
                </MenuItem>
            </Menu>
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands Margin="0,0,16,0" Visibility="{Binding IsProjectLoaded, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
            <ComboBox MaxWidth="200" DisplayMemberPath="Name" ToolTip="Pack Profile" Background="Transparent" BorderThickness="0"
                      ItemsSource="{Binding PublishProfiles, Mode=OneWay}"
                      SelectedItem="{Binding SelectedProfile, Mode=TwoWay}"/>
            <ComboBox MaxWidth="200" DisplayMemberPath="DisplayName" ToolTip="Publish Location" Background="Transparent" BorderThickness="0"
                      SelectedItem="{Binding SelectedLocation, Mode=TwoWay}"
                      SelectionChanged="OnPublishLocationSelectionChanged">
                <ComboBox.ItemsSource>
                    <CompositeCollection>
                        <vm:LocationViewModel x:Name="ManualLocation" DisplayName="Manual" IsManualSelect="True"/>
                        <CollectionContainer Collection="{Binding Source={StaticResource PublishLocationsView}}"/>
                    </CompositeCollection>
                </ComboBox.ItemsSource>
            </ComboBox>
            <Button Content="Publish" Click="OnPublishMenuItemClick"
                    IsEnabled="{Binding HasProfileSelection, Mode=OneWay}"/>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="16" MaxWidth="800"
                  Visibility="{Binding IsProjectLoaded, Mode=OneWay, Converter={StaticResource VisibilityInverseConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Column="0" Grid.Row="1" Margin="0,0,6,0" Orientation="Vertical">
                    <Button Margin="4" Padding="8" FontSize="14" HorizontalContentAlignment="Left" Click="OnNewProjectClick" Style="{DynamicResource MahApps.Styles.Button.Square.Accent}">
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconFontAwesome Kind="FolderPlusSolid" Margin="0,0,8,0" VerticalAlignment="Center"/>
                            <TextBlock Text="New Project" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                    <Button Margin="4" Padding="8" FontSize="14" HorizontalContentAlignment="Left" Click="OnOpenClick" Style="{DynamicResource MahApps.Styles.Button.Square.Accent}">
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconFontAwesome Kind="FolderOpenSolid" Margin="0,0,8,0" VerticalAlignment="Center"/>
                            <TextBlock Text="Open Existing" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
                <TextBlock Grid.Column="1" Grid.Row="0" Margin="6,6,0,0" Text="Recent Projects" FontWeight="Bold" FontSize="16"
                           Foreground="{DynamicResource MahApps.Brushes.Accent2}"/>
                <Rectangle Grid.Column="1" Grid.Row="0" VerticalAlignment="Bottom" Height="1" Fill="#333"/>
                <ListView Grid.Column="1" Grid.Row="1" Margin="0,0,6,6" x:Name="RecentList" SelectionChanged="OnRecentSelectionChanged"
                          Background="Transparent" BorderThickness="0" FontSize="14"
                          ItemsSource="{Binding RecentDirectories, Mode=OneWay}"/>
            </Grid>
            <Grid Visibility="{Binding IsProjectLoaded, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="280"/>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <DockPanel Grid.Column="0" Background="#FF1B1B1B">
                    <Grid DockPanel.Dock="Top" Height="34">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Margin="2" Padding="4,0,12,0" VerticalContentAlignment="Center" Height="26"
                                 Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <iconPacks:PackIconFontAwesome Grid.Column="0" Kind="SearchSolid" Margin="4,0" Height="12" HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="False" Foreground="#FFC9C9C9"/>
                        <Button Grid.Column="1" ToolTip="Refresh" Width="26" Height="26" Margin="2,4" BorderThickness="0" Padding="2" Click="OnContentRefreshClick"
                                Content="{iconPacks:FontAwesome Kind=RedoSolid}"/>
                        <ToggleButton Grid.Column="2" Width="26" Height="26" Margin="2,4,4,4" BorderThickness="0" Padding="2" ToolTip="Show All Files"
                                      Content="{iconPacks:FontAwesome Kind=FileSolid}"
                                      IsChecked="{Binding ShowAllFiles, Mode=TwoWay}"/>
                    </Grid>
                    <TreeView x:Name="ContentTree" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" FontSize="14"
                              SelectedItemChanged="OnTextureTreeSelectedItemChanged"
                              PreviewMouseRightButtonDown="OnContentTreePreviewMouseRightButtonDown"
                              ItemsSource="{Binding TreeRoot.Nodes, Mode=OneWay}">
                        <TreeView.Resources>
                            <DataTemplate DataType="{x:Type vm:ContentTreeFile}">
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconFontAwesome Margin="0,0,4,0" Height="10" VerticalAlignment="Center"
                                                    Kind="{Binding Icon, Mode=OneWay}">
                                        <iconPacks:PackIconFontAwesome.Style>
                                            <Style TargetType="iconPacks:PackIconFontAwesome">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Type, Mode=OneWay}" Value="{x:Static vm:ContentNodeType.Material}">
                                                        <Setter Property="Foreground" Value="#0F0"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Type, Mode=OneWay}" Value="{x:Static vm:ContentNodeType.Texture}">
                                                        <Setter Property="Foreground" Value="#F00"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </iconPacks:PackIconFontAwesome.Style>
                                    </iconPacks:PackIconFontAwesome>
                                    <TextBlock Text="{Binding Name, Mode=OneWay}"/>
                                </StackPanel>
                            </DataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type vm:ContentTreeMaterialDirectory}"
                                                      ItemsSource="{Binding Nodes, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconFontAwesome Kind="PaletteSolid" Margin="0,0,4,0" Height="10" VerticalAlignment="Center" Foreground="#69ADE2"/>
                                    <TextBlock Text="{Binding Name}"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type vm:ContentTreeDirectory}"
                                                      ItemsSource="{Binding Nodes, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconFontAwesome Kind="FolderSolid" Margin="0,0,4,0" Height="10" VerticalAlignment="Center" Foreground="#C4C4C4"/>
                                    <TextBlock Text="{Binding Name}"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Visible, Mode=OneWay}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Open Folder" Click="OnTreeOpenFolderClick"/>
                                <Separator
                                    Visibility="{Binding HasTreeTextureSelection, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                                <MenuItem Header="Create Material" Icon="{iconPacks:FontAwesome Kind=PaletteSolid}" Click="OnImportMaterialClick"
                                          Visibility="{Binding HasTreeTextureSelection, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                                </MenuItem>
                            </ContextMenu>
                        </TreeView.ContextMenu>
                    </TreeView>
                </DockPanel>
                <GridSplitter Grid.Column="1" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" ShowsPreview="True" HorizontalAlignment="Stretch"/>
                <!--<TabControl></TabControl>-->
                <Grid Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition Width="280"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <DockPanel Visibility="{Binding HasPreviewImage, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                            <DockPanel DockPanel.Dock="Top" LastChildFill="False" Background="#FF1B1B1B" Height="34">
                                <CheckBox DockPanel.Dock="Left" Content="Tile" Margin="4"
                                          IsChecked="{Binding EnableTiling, ElementName=TextureViewer}"/>
                                <ComboBox IsEditable="True" DockPanel.Dock="Right" Margin="4" BorderThickness="0"
                                          Text="{Binding ZoomText, Mode=TwoWay, ElementName=TextureViewer}">
                                    <ComboBoxItem Content="10%"/>
                                    <ComboBoxItem Content="25%"/>
                                    <ComboBoxItem Content="50%"/>
                                    <ComboBoxItem Content="100%" IsSelected="True"/>
                                    <ComboBoxItem Content="200%"/>
                                    <ComboBoxItem Content="400%"/>
                                    <ComboBoxItem Content="800%"/>
                                </ComboBox>
                            </DockPanel>
                            <Grid>
                                <controls:TextureView x:Name="TextureViewer" Background="#222"
                                                      Texture="{Binding LoadedTexture, Mode=OneWay}"/>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Visibility="{Binding IsPreviewLoading, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                                    <Button Width="20" Height="20" Margin="0,0,4,0" ToolTip="Cancel" Click="OnPreviewCancelClick" Padding="0" VerticalAlignment="Center"
                                            Content="{iconPacks:FontAwesome Kind=WindowCloseSolid}"/>
                                    <TextBlock HorizontalAlignment="Center" FontSize="18" FontStyle="Italic" Text="Generating Preview..." VerticalAlignment="Center"/>
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                        <StackPanel Margin="12" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical">
                            <TextBlock HorizontalAlignment="Center" Text="No Preview Available" FontSize="20" FontStyle="Italic"/>
                            <TextBlock HorizontalAlignment="Center" Text="(Select a material channel on the right)"/>
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding HasLoadedMaterial, Mode=OneWay}" Value="True"/>
                                                <Condition Binding="{Binding HasTagSelection, Mode=OneWay}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>
                    </Grid>
                    <GridSplitter Grid.Column="1" Grid.Row="0" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" ShowsPreview="True" HorizontalAlignment="Stretch"/>
                    <controls:MaterialPropertiesControl Grid.Column="2" DataChanged="OnMaterialChanged" EditLayer="OnEditLayer" GenerateNormal="OnGenerateNormal" GenerateOcclusion="OnGenerateOcclusion"
                                                        Material="{Binding LoadedMaterial, Mode=OneWay}"
                                                        SelectedTag="{Binding SelectedTag, Mode=TwoWay}"
                                                        Visibility="{Binding HasLoadedMaterial, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                </Grid>
            </Grid>
        </Grid>
        <StatusBar Grid.Row="1">
            <StatusBar.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black"/>
                    <GradientStop Color="#111" Offset="1"/>
                </LinearGradientBrush>
            </StatusBar.Background>
            <StatusBarItem>
                <TextBlock Text="{Binding RootDirectory, Mode=OneWay}"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <ProgressBar Width="90" IsIndeterminate="True" Visibility="{Binding IsBusy, Converter={StaticResource VisibilityConverter}}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</mah:MetroWindow>
