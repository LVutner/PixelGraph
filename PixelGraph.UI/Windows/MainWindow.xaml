<mah:MetroWindow x:Class="PixelGraph.UI.Windows.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                 xmlns:vm="clr-namespace:PixelGraph.UI.ViewModels"
                 xmlns:controls="clr-namespace:PixelGraph.UI.Controls"
                 xmlns:converters="clr-namespace:PixelGraph.UI.Converters"
                 xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                 xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
                 xmlns:models="clr-namespace:PixelGraph.UI.Models"
                 xmlns:vd="clr-namespace:PixelGraph.UI.ViewData"
                 xmlns:pm="clr-namespace:PixelGraph.UI.PreviewModels"
                 d:DataContext="{d:DesignInstance models:MainDesignerModel, IsDesignTimeCreatable=True}"
                 Title="PixelGraph" Height="600" Width="1000" mc:Ignorable="d" WindowState="Maximized"
                 Loaded="OnWindowLoaded" Closed="OnWindowClosed" PreviewKeyUp="OnWindowPreviewKeyUp"
                 ShowIconOnTitleBar="True" IconScalingMode="NoScaleSmallerFrame" TitleForeground="Transparent"
                 Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                 Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}">
    <Window.Resources>
        <vd:RenderModeValues x:Key="RenderModes"/>
        <converters:VisibilityConverter x:Key="VisibilityConverter"/>
        <converters:VisibilityInverseConverter x:Key="VisibilityInverseConverter"/>
        <CollectionViewSource x:Key="PublishLocationsView" Source="{Binding Path=PublishLocations}" />
    </Window.Resources>
    <Window.DataContext>
        <models:MainModel x:Name="Model"/>
    </Window.DataContext>
    <mah:MetroWindow.IconTemplate>
        <DataTemplate>
            <Grid Width="{TemplateBinding Width}"
                  Height="{TemplateBinding Height}"
                  Margin="4"
                  Background="Transparent"
                  RenderOptions.EdgeMode="Aliased"
                  RenderOptions.BitmapScalingMode="HighQuality">
                <Image Source="/icon.ico"/>
            </Grid>
        </DataTemplate>
    </mah:MetroWindow.IconTemplate>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands Margin="0,0,16,0" Visibility="{Binding IsProjectLoaded, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
            <ComboBox MaxWidth="200" DisplayMemberPath="Name" ToolTip="Pack Profile" Background="Transparent" BorderThickness="0"
                      ItemsSource="{Binding Profile.List, Mode=OneWay}"
                      SelectedItem="{Binding Profile.Selected, Mode=TwoWay}"/>
            <ComboBox MaxWidth="200" DisplayMemberPath="DisplayName" ToolTip="Publish Location" Background="Transparent" BorderThickness="0"
                      SelectedItem="{Binding SelectedLocation, Mode=TwoWay}"
                      SelectionChanged="OnPublishLocationSelectionChanged">
                <ComboBox.ItemsSource>
                    <CompositeCollection>
                        <models:LocationModel x:Name="ManualLocation" DisplayName="Manual" IsManualSelect="True"/>
                        <CollectionContainer Collection="{Binding Source={StaticResource PublishLocationsView}}"/>
                    </CompositeCollection>
                </ComboBox.ItemsSource>
            </ComboBox>
            <Button Content="Publish" Click="OnPublishMenuItemClick"
                    IsEnabled="{Binding Profile.HasSelection, Mode=OneWay}"/>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu IsMainMenu="True">
            <Menu.Resources>
                <Style TargetType="iconPacks:PackIconFontAwesome">
                    <Setter Property="Padding" Value="2,0,0,0"/>
                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent4}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Menu.Resources>
            <MenuItem Header="App" Background="Transparent">
                <MenuItem Header="Settings" Click="OnSettingsClick">
                    <MenuItem.Icon>
                        <iconPacks:PackIconFontAwesome Kind="CogSolid"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Exit" Click="OnExitClick">
                    <MenuItem.Icon>
                        <iconPacks:PackIconFontAwesome Kind="WindowCloseSolid"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Project" Background="Transparent">
                <MenuItem Header="New" Click="OnNewProjectClick">
                    <MenuItem.Icon>
                        <iconPacks:PackIconFontAwesome Kind="FolderPlusSolid"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Open" Icon="{iconPacks:FontAwesome FolderOpenSolid}" Click="OnOpenClick"/>
                <MenuItem Header="Close" Icon="{iconPacks:FontAwesome DoorClosedSolid}" Click="OnCloseProjectClick"
                          IsEnabled="{Binding IsProjectLoaded, Mode=OneWay}"/>
                <Separator/>
                <MenuItem Header="Configuration" Icon="{iconPacks:FontAwesome PaletteSolid}" Click="OnInputEncodingClick"
                          IsEnabled="{Binding IsProjectLoaded, Mode=OneWay}"/>
            </MenuItem>
            <MenuItem Header="Pack" Background="Transparent">
                <MenuItem Header="Import" Icon="{iconPacks:FontAwesome FileImportSolid}"
                          IsEnabled="{Binding IsProjectLoaded, Mode=OneWay}">
                    <MenuItem Header="From Folder" Icon="{iconPacks:FontAwesome FolderSolid}" Click="OnImportFolderClick"/>
                    <MenuItem Header="From Archive" Icon="{iconPacks:FontAwesome FileArchiveSolid}" Click="OnImportZipClick"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Publish Profiles" Icon="{iconPacks:FontAwesome BookSolid}" Click="OnProfilesClick"
                          IsEnabled="{Binding IsProjectLoaded, Mode=OneWay}"/>
                <MenuItem Header="Publish Locations" Icon="{iconPacks:FontAwesome FolderSolid}" Click="OnLocationsClick"/>
            </MenuItem>
            <MenuItem Header="Material">
                <MenuItem Header="New" Icon="{iconPacks:FontAwesome PlusSolid}" Click="OnNewMaterialMenuClick"
                          IsEnabled="{Binding IsProjectLoaded, Mode=OneWay}"/>
                <MenuItem Header="Connections" Visibility="Collapsed" Click="OnMaterialConnectionsMenuClick"
                          Icon="{iconPacks:FontAwesome PuzzlePieceSolid}"
                          IsEnabled="{Binding Material.HasLoaded, Mode=OneWay}"/>
                <MenuItem Header="Filters" Visibility="Collapsed" Click="OnMaterialFiltersMenuClick"
                          Icon="{iconPacks:FontAwesome FilterSolid}"
                          IsEnabled="{Binding Material.HasLoaded, Mode=OneWay}"/>
            </MenuItem>
            <MenuItem Header="Tools" Visibility="Collapsed">
                <MenuItem Header="Generate External Normal Map"/>
                <MenuItem Header="Generate External Occlusion Map"/>
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1">
            <Border HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="16" MaxWidth="800" CornerRadius="8"
                    Background="{DynamicResource MahApps.Brushes.Accent4}"
                    Visibility="{Binding IsProjectLoaded, Mode=OneWay, Converter={StaticResource VisibilityInverseConverter}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Column="0" Grid.Row="1" Margin="0,0,6,0" Orientation="Vertical">
                        <Button Margin="4" Padding="8" FontSize="14" HorizontalContentAlignment="Left" BorderThickness="0" Click="OnNewProjectClick"
                                Style="{DynamicResource MahApps.Styles.Button.Square.Accent}">
                            <StackPanel Orientation="Horizontal">
                                <iconPacks:PackIconFontAwesome Kind="FolderPlusSolid" Margin="0,0,8,0" VerticalAlignment="Center"/>
                                <TextBlock Text="New Project" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                        <Button Margin="4" Padding="8" FontSize="14" HorizontalContentAlignment="Left" BorderThickness="0" Click="OnOpenClick"
                                Style="{DynamicResource MahApps.Styles.Button.Square.Accent}">
                            <StackPanel Orientation="Horizontal">
                                <iconPacks:PackIconFontAwesome Kind="FolderOpenSolid" Margin="0,0,8,0" VerticalAlignment="Center"/>
                                <TextBlock Text="Open Existing" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                    <TextBlock Grid.Column="1" Grid.Row="0" Margin="6,6,0,0" Text="Recent Projects" FontWeight="Bold" FontSize="16"
                               Foreground="{DynamicResource MahApps.Brushes.Gray2}"/>
                    <Rectangle Grid.Column="1" Grid.Row="0" VerticalAlignment="Bottom" Height="1"
                               Fill="{DynamicResource MahApps.Brushes.Accent2}"/>
                    <ListView x:Name="RecentList" Grid.Column="1" Grid.Row="1" Margin="0,0,6,6"
                              SelectionChanged="OnRecentSelectionChanged" BorderThickness="0" FontSize="14"
                              Background="Transparent" FocusVisualStyle="{x:Null}"
                              ItemsSource="{Binding RecentDirectories, Mode=OneWay}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </Grid>
            </Border>
            <Grid Visibility="{Binding IsProjectLoaded, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="280"/>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <DockPanel Grid.Column="0">
                    <Grid DockPanel.Dock="Top" Height="34" Background="{DynamicResource MahApps.Brushes.Accent4}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Margin="2" Padding="4,0,12,0" VerticalContentAlignment="Center" Height="26"
                                 Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <iconPacks:PackIconFontAwesome Grid.Column="0" Kind="SearchSolid" Margin="4,0" Height="12" HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="False" Foreground="#FFC9C9C9"/>
                        <Button Grid.Column="1" ToolTip="Refresh" Width="26" Height="26" Margin="2,4" BorderThickness="0" Padding="6" Click="OnContentRefreshClick"
                                Style="{StaticResource MahApps.Styles.Button.Square.Accent}">
                            <iconPacks:PackIconFontAwesome Kind="RedoSolid" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>
                        <ToggleButton Grid.Column="2" Width="26" Height="26" Margin="2,4,4,4" BorderThickness="0" Padding="6" ToolTip="Show All Files"
                                      IsChecked="{Binding ShowAllFiles, Mode=TwoWay}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource MahApps.Styles.Button.Square.Accent}">
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                            <iconPacks:PackIconFontAwesome Kind="FileSolid" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </ToggleButton>
                    </Grid>
                    <TreeView x:Name="ContentTree" FontSize="14" SelectedItemChanged="OnTextureTreeSelectedItemChanged"
                              Background="{DynamicResource MahApps.Brushes.Gray10}"
                              VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
                              PreviewMouseRightButtonDown="OnContentTreePreviewMouseRightButtonDown"
                              ItemsSource="{Binding TreeRoot.Nodes, Mode=OneWay}">
                        <TreeView.Resources>
                            <DataTemplate DataType="{x:Type vm:ContentTreeFile}">
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconFontAwesome Padding="2" VerticalAlignment="Center"
                                                                   Kind="{Binding Icon, Mode=OneWay}"
                                                                   Foreground="{DynamicResource MahApps.Brushes.Gray4}"
                                                                   Width="16">
                                        <iconPacks:PackIconFontAwesome.Style>
                                            <Style TargetType="iconPacks:PackIconFontAwesome">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Type, Mode=OneWay}" Value="{x:Static vm:ContentNodeType.Material}">
                                                        <Setter Property="Foreground" Value="#0F0"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Type, Mode=OneWay}" Value="{x:Static vm:ContentNodeType.Texture}">
                                                        <Setter Property="Foreground" Value="#F00"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </iconPacks:PackIconFontAwesome.Style>
                                    </iconPacks:PackIconFontAwesome>
                                    <TextBlock Padding="4,0,8,2" VerticalAlignment="Center"
                                               FontSize="{TemplateBinding TreeViewItem.FontSize}"
                                               Foreground="{TemplateBinding TreeViewItem.Foreground}"
                                               Text="{Binding Name, Mode=OneWay}"/>
                                </StackPanel>
                            </DataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type vm:ContentTreeMaterialDirectory}"
                                                      ItemsSource="{Binding Nodes, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconFontAwesome Kind="PaletteSolid" Padding="2" VerticalAlignment="Center"
                                                                   Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                                                   Width="16"/>
                                    <TextBlock Padding="4,0,8,2" VerticalAlignment="Center"
                                               FontSize="{TemplateBinding TreeViewItem.FontSize}"
                                               Foreground="{TemplateBinding TreeViewItem.Foreground}"
                                               Text="{Binding Name}"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type vm:ContentTreeDirectory}"
                                                      ItemsSource="{Binding Nodes, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconFontAwesome Kind="FolderSolid" Padding="2" VerticalAlignment="Center"
                                                                   Foreground="{DynamicResource MahApps.Brushes.Gray}"
                                                                   Width="16"/>
                                    <TextBlock Padding="4,0,8,2" VerticalAlignment="Center"
                                               FontSize="{TemplateBinding TreeViewItem.FontSize}"
                                               Foreground="{TemplateBinding TreeViewItem.Foreground}"
                                               Text="{Binding Name}"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Visible, Mode=OneWay}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Open Folder" Click="OnTreeOpenFolderClick"/>
                                <Separator
                                    Visibility="{Binding HasTreeTextureSelection, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                                <MenuItem Header="Create Material" Icon="{iconPacks:FontAwesome Kind=PaletteSolid}" Click="OnImportMaterialClick"
                                          Visibility="{Binding HasTreeTextureSelection, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                                </MenuItem>
                            </ContextMenu>
                        </TreeView.ContextMenu>
                    </TreeView>
                </DockPanel>
                <GridSplitter Grid.Column="1" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" ShowsPreview="True" HorizontalAlignment="Stretch"
                              Background="{DynamicResource MahApps.Brushes.Accent3}"/>
                <!--<TabControl></TabControl>-->
                <Grid Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition Width="280"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <DockPanel IsEnabled="{Binding HasTreeMaterialOrTextureSelection, Mode=OneWay}">
                            <DockPanel DockPanel.Dock="Top" LastChildFill="False" Height="34"
                                       Background="{DynamicResource MahApps.Brushes.Accent4}">
                                <CheckBox DockPanel.Dock="Left" Content="3D" Margin="4" FontWeight="Bold"
                                          Foreground="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                          IsChecked="{Binding Preview.EnableRender}"/>
                                <CheckBox DockPanel.Dock="Left" Content="Tile" Margin="4" FontWeight="Bold"
                                          Foreground="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                          Visibility="{Binding Preview.EnableRender, Converter={StaticResource VisibilityInverseConverter}}"
                                          IsChecked="{Binding EnableTiling, ElementName=TextureViewer}"/>
                                <ComboBox DockPanel.Dock="Left" Margin="4" BorderThickness="0" DisplayMemberPath="Text" SelectedValuePath="Value" SelectionChanged="OnRenderModeSelectionChanged"
                                          ItemsSource="{StaticResource RenderModes}"
                                          Visibility="{Binding Preview.EnableRender, Converter={StaticResource VisibilityConverter}}"
                                          SelectedValue="{Binding Preview.RenderMode, Mode=TwoWay}"/>
                                <CheckBox DockPanel.Dock="Left" Content="Environment" Margin="4" FontWeight="Bold"
                                          Foreground="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                          Visibility="{Binding Preview.EnableRender, Converter={StaticResource VisibilityConverter}}"
                                          IsChecked="{Binding Preview.EnableEnvironment, Mode=TwoWay}"/>
                                <CheckBox DockPanel.Dock="Left" Content="Lights" Margin="4" FontWeight="Bold"
                                          Foreground="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                          Visibility="{Binding Preview.EnableRender, Converter={StaticResource VisibilityConverter}}"
                                          IsChecked="{Binding Preview.EnableLights, Mode=TwoWay}"/>
                                <ComboBox IsEditable="True" DockPanel.Dock="Right" Margin="4" BorderThickness="0"
                                          Visibility="{Binding Preview.EnableRender, Converter={StaticResource VisibilityInverseConverter}}"
                                          Text="{Binding ZoomText, Mode=TwoWay, ElementName=TextureViewer}">
                                    <ComboBoxItem Content="10%"/>
                                    <ComboBoxItem Content="25%"/>
                                    <ComboBoxItem Content="50%"/>
                                    <ComboBoxItem Content="100%" IsSelected="True"/>
                                    <ComboBoxItem Content="200%"/>
                                    <ComboBoxItem Content="400%"/>
                                    <ComboBoxItem Content="800%"/>
                                </ComboBox>
                            </DockPanel>
                            <DockPanel DockPanel.Dock="Top" LastChildFill="False" Height="34"
                                       Background="{DynamicResource MahApps.Brushes.Accent4}">
                                <DockPanel.Style>
                                    <Style TargetType="DockPanel">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Preview.EnableRender, Mode=OneWay}" Value="True"/>
                                                    <Condition Binding="{Binding Preview.EnableEnvironment, Mode=OneWay}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Style>
                                </DockPanel.Style>
                                <CheckBox DockPanel.Dock="Left" Content="Cycle" Margin="4" FontWeight="Bold"
                                          Foreground="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                          Visibility="{Binding Preview.EnableEnvironment, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                                    <CheckBox.Triggers>
                                        <EventTrigger RoutedEvent="CheckBox.Checked">
                                            <BeginStoryboard Name="TimeCycleStoryboard">
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetName="TimeOfDaySlider" 
                                                        Storyboard.TargetProperty="Value" 
                                                        From="0" To="24000" Duration="0:0:30" RepeatBehavior="Forever" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="CheckBox.Unchecked">
                                            <StopStoryboard BeginStoryboardName="TimeCycleStoryboard"/>
                                        </EventTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>
                                <Slider x:Name="TimeOfDaySlider" DockPanel.Dock="Left" Margin="4" Minimum="-6000" Maximum="18000" Width="400"
                                        Visibility="{Binding Preview.EnableEnvironment, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                                        Value="{Binding Preview.TimeOfDay, Mode=TwoWay}"/>
                            </DockPanel>
                            <Grid Visibility="{Binding HasTreeMaterialOrTextureSelection, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                                <controls:TextureView x:Name="TextureViewer"
                                                      Visibility="{Binding Preview.EnableRender, Converter={StaticResource VisibilityInverseConverter}}"
                                                      Texture="{Binding Preview.LayerImage, Mode=OneWay}"/>
                                <hx:Viewport3DX
                                    DataContext="{Binding Preview, Mode=OneTime}"
                                    Title="Hello World!"
                                    BackgroundColor="#222"
                                    Camera="{Binding Camera}"
                                    CoordinateSystemLabelForeground="White"
                                    EffectsManager="{Binding EffectsManager}"
                                    EnableD2DRendering="False"
                                    EnableSwapChainRendering="True"
                                    IsShadowMappingEnabled="False"
                                    ModelUpDirection="0,1,0"
                                    MSAA="Two"
                                    ShowCoordinateSystem="True"
                                    TextBrush="White"
                                    UseDefaultGestures="False"
                                    ZoomExtentsWhenLoaded="True"
                                    Visibility="{Binding EnableRender, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <hx:Viewport3DX.InputBindings>
                                        <KeyBinding Key="B" Command="hx:ViewportCommands.BackView" />
                                        <KeyBinding Key="F" Command="hx:ViewportCommands.FrontView" />
                                        <KeyBinding Key="U" Command="hx:ViewportCommands.TopView" />
                                        <KeyBinding Key="D" Command="hx:ViewportCommands.BottomView" />
                                        <KeyBinding Key="L" Command="hx:ViewportCommands.LeftView" />
                                        <KeyBinding Key="R" Command="hx:ViewportCommands.RightView" />
                                        <KeyBinding Command="hx:ViewportCommands.ZoomExtents" Gesture="Control+E" />
                                        <MouseBinding Command="hx:ViewportCommands.Rotate" Gesture="RightClick" />
                                        <MouseBinding Command="hx:ViewportCommands.Zoom" Gesture="MiddleClick" />
                                        <MouseBinding Command="hx:ViewportCommands.Pan" Gesture="LeftClick" />
                                    </hx:Viewport3DX.InputBindings>
                                    <pm:MinecraftScene3D x:Name="MinecraftScene"
                                        TimeOfDay="{Binding TimeOfDayLinear, Mode=OneWay}"
                                        SunDirection="{Binding SunDirection, Mode=OneWay}"
                                        SunStrength="{Binding SunStrength, Mode=OneWay}"
                                        Wetness="{Binding Wetness, Mode=OneWay}"
                                        ParallaxDepth="{Binding ParallaxDepth, Mode=OneWay}"
                                        ParallaxSamplesMin="{Binding ParallaxSamplesMin, Mode=OneWay}"
                                        ParallaxSamplesMax="{Binding ParallaxSamplesMax, Mode=OneWay}"
                                        EnableLinearSampling="{Binding EnableLinearSampling, Mode=OneWay}"/>
                                    <pm:EnvironmentCube3D x:Name="EnvironmentCube" FaceSize="64"
                                                          IsRendering="{Binding EnableEnvironment, Mode=OneWay}"
                                                          Scene="{Binding Mode=OneWay, Source={x:Reference MinecraftScene}}"/>
                                    <pm:IrradianceCube3D x:Name="IrradianceCube" FaceSize="32"
                                                         IsRendering="{Binding EnableEnvironment, Mode=OneWay}"
                                                         Source="{Binding Mode=OneWay, Source={x:Reference EnvironmentCube}}"/>
                                    <hx:AmbientLight3D Color="#222"
                                                       Visibility="{Binding EnableEnvironment, Mode=OneWay, Converter={StaticResource VisibilityInverseConverter}}"/>
                                    <hx:DirectionalLight3D Color="{Binding SunColor, Mode=OneWay}"
                                                           Direction="{Binding SunCamera.LookDirection, Mode=OneWay}"
                                                           IsRendering="{Binding EnableEnvironment, Mode=OneWay}"/>
                                    <hx:PointLight3D Color="#CA8A41" Range="16" Position="5,7,5"
                                                     IsRendering="{Binding EnableLights, Mode=OneWay}"/>
                                    <hx:PointLight3D Color="#388CB0" Range="16" Position="-6,-3,-3"
                                                     IsRendering="{Binding EnableLights, Mode=OneWay}"/>
                                    <pm:SkyDome3D IsRendering="{Binding EnableEnvironment, Mode=OneWay}"/>
                                    <hx:DraggableGeometryModel3D Transform="{Binding PointLightTransform, Mode=TwoWay}" />
                                    <hx:MeshGeometryModel3D IsThrowingShadow="True" CullMode="Back"
                                                            Geometry="{Binding Model, Mode=OneWay}"
                                                            Material="{Binding ModelMaterial, Mode=OneWay}"/>
                                    <!--<hx:UICompositeManipulator3D Diameter="6"
                                        CanRotateX="False" CanRotateY="False" CanRotateZ="False"
                                        CanTranslateX="True" CanTranslateY="True" CanTranslateZ="True"
                                        Transform="{Binding PointLightTransform}"/>-->
                                    <hx:ContinuousRender3D/>
                                </hx:Viewport3DX>
                                <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Visibility="{Binding Preview.IsLoading, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                                    <Button Width="20" Height="20" Margin="0,0,4,0" ToolTip="Cancel" Click="OnPreviewCancelClick" Padding="0" VerticalAlignment="Center"
                                            Content="{iconPacks:FontAwesome Kind=WindowCloseSolid}"/>
                                    <TextBlock HorizontalAlignment="Center" FontSize="18" FontStyle="Italic" Text="Generating Preview..." VerticalAlignment="Center"/>
                                </StackPanel>-->
                                <Border Margin="8" HorizontalAlignment="Left" VerticalAlignment="Bottom" BorderThickness="1" CornerRadius="4"
                                        Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                        BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                                        Visibility="{Binding Preview.IsLoading, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                                    <StackPanel Orientation="Horizontal">
                                        <iconPacks:PackIconFontAwesome Kind="SpinnerSolid" Spin="True" SpinDuration="1.8" Margin="6" Width="16" Height="16" VerticalAlignment="Center"/>
                                        <TextBlock Text="Loading" Margin="2,0,8,0" FontWeight="Bold" FontSize="14" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </DockPanel>
                        <StackPanel Margin="12" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical">
                            <TextBlock HorizontalAlignment="Center" Text="No Preview Available" FontSize="20" FontStyle="Italic"/>
                            <TextBlock HorizontalAlignment="Center" Text="(Select a material channel on the right)"/>
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Material.HasLoaded, Mode=OneWay}" Value="True"/>
                                                <Condition Binding="{Binding Preview.HasSelectedTag, Mode=OneWay}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>
                    </Grid>
                    <GridSplitter Grid.Column="1" Grid.Row="0" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" ShowsPreview="True" HorizontalAlignment="Stretch"
                                  Background="{DynamicResource MahApps.Brushes.Accent3}"/>
                    <controls:MaterialPropertiesControl Grid.Column="2" DataChanged="OnMaterialChanged" EditLayer="OnEditLayer"
                                                        GenerateNormal="OnGenerateNormal" GenerateOcclusion="OnGenerateOcclusion"
                                                        Material="{Binding Material.Loaded, Mode=OneWay}"
                                                        SelectedTag="{Binding Preview.SelectedTag, Mode=TwoWay}"
                                                        Visibility="{Binding Material.HasLoaded, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                </Grid>
            </Grid>
        </Grid>
        <StatusBar Grid.Row="2" FontFamily="Consolas"
                   Background="{DynamicResource MahApps.Brushes.Accent4}">
            <StatusBarItem>
                <TextBlock
                    Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                    Text="{Binding RootDirectory, Mode=OneWay}"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <ProgressBar Width="90" IsIndeterminate="True"
                             Visibility="{Binding IsBusy, Converter={StaticResource VisibilityConverter}}"/>
            </StatusBarItem>
        </StatusBar>
        <Grid Grid.Row="0" Grid.RowSpan="2"
              Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
              Visibility="{Binding IsImageEditorOpen, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
            <StackPanel Orientation="Vertical" MaxWidth="400" VerticalAlignment="Center">
                <TextBlock Text="Waiting for external image editor to close..." HorizontalAlignment="Center" FontSize="16" FontStyle="Italic"
                           Foreground="{DynamicResource MahApps.Brushes.Accent}"/>
                <Button Content="Complete" HorizontalAlignment="Center" Margin="0,16,0,0" Padding="6,2" Click="OnImageEditorCompleteClick"/>
            </StackPanel>
        </Grid>
    </Grid>
</mah:MetroWindow>
