<mde:MaterialWindow x:Class="PixelGraph.UI.Windows.PackProfilesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:PixelGraph.UI.ViewModels"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:controls="clr-namespace:PixelGraph.UI.Controls"
        xmlns:converters="clr-namespace:PixelGraph.UI.Converters"
        xmlns:mde="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions"
        Title="Pack Profiles" Width="1000" Height="800" mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        d:DataContext="{d:DesignInstance vm:ProfilesDesignVM, IsDesignTimeCreatable=True}"
        WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <vm:OptionalEncodingFormatValues x:Key="Formats"/>
        <vm:OptionalTextureTagValues x:Key="TextureTags"/>
        <vm:OptionalColorChannelValues x:Key="ColorChannels"/>
        <vm:SamplerValues x:Key="Samplers"/>
        <converters:NullableConverter x:Key="NullableConverter"/>
        <converters:TextureLabelConverter x:Key="TextureLabelConverter"/>
        <converters:SamplerLabelConverter x:Key="SamplerLabelConverter"/>
    </Window.Resources>
    <Window.DataContext>
        <vm:PackProfilesVM x:Name="VM" DataChanged="OnDataChanged"/>
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="260"/>
            <ColumnDefinition Width="3"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <DockPanel>
            <ToolBar DockPanel.Dock="Top" ToolBarTray.IsLocked="True">
                <Button ToolTip="New Profile" Width="32" Height="28" Padding="0" Click="OnNewProfileClick" Foreground="LawnGreen">
                    <md:PackIcon Kind="Plus" Height="20"/>
                </Button>
                <Button ToolTip="Duplicate Profile" Width="32" Height="28" Padding="0" Click="OnDuplicateProfileClick" Foreground="DeepSkyBlue"
                        IsEnabled="{Binding HasSelectedProfile, Mode=OneWay}">
                    <md:PackIcon Kind="ContentCopy" Height="18"/>
                </Button>
                <Button ToolTip="Delete Profile" Width="32" Height="28" Padding="0" Click="OnDeleteProfileClick" Foreground="Red"
                        IsEnabled="{Binding HasSelectedProfile, Mode=OneWay}">
                    <md:PackIcon Kind="Trash" Height="20"/>
                </Button>
            </ToolBar>
            <ListBox x:Name="ProfileListBox" DisplayMemberPath="Name" Width="320" Background="Black" MouseDown="OnProfileListBoxMouseDown" SelectionChanged="OnProfileSelectionChanged"
                     ItemsSource="{Binding Profiles, Mode=OneWay}"
                     SelectedItem="{Binding SelectedProfileItem, Mode=TwoWay}"/>
        </DockPanel>
        <GridSplitter Grid.Column="1" Background="{DynamicResource MaterialDesignDarkForeground}" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" ShowsPreview="True" HorizontalAlignment="Stretch"/>
        <TabControl Grid.Column="2" Style="{StaticResource MaterialDesignTabControl}"
                    IsEnabled="{Binding HasSelectedProfile, Mode=OneWay}">
            <TabItem Header="Metadata">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Background="#222">
                    <Grid Margin="12,12,12,12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Margin="4" VerticalAlignment="Center" Text="Game Edition" FontSize="14" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <ComboBox Grid.Column="1" Grid.Row="0" SelectedValuePath="Content" Margin="4" TextBlock.FontSize="14" HorizontalContentAlignment="Center"
                                  Foreground="{DynamicResource SecondaryHueMidBrush}"
                                  SelectedValue="{Binding GameEdition}">
                            <ComboBoxItem Content="Java"/>
                            <ComboBoxItem Content="Bedrock"/>
                        </ComboBox>
                        <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" Text="Pack Version" FontSize="14" Foreground="{DynamicResource PrimaryHueMidBrush}" Margin="4,4,4,4" HorizontalAlignment="Right"/>
                        <TextBox Grid.Column="3" Grid.Row="0" Margin="4" HorizontalContentAlignment="Center" Width="64" HorizontalAlignment="Right"
                                 Foreground="{DynamicResource SecondaryHueMidBrush}"
                                 Text="{Binding PackFormat}"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Margin="4" VerticalAlignment="Center" Text="Description" FontSize="14" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <TextBox Grid.Column="1" Grid.Row="1" Margin="4" Grid.ColumnSpan="3"
                                 Foreground="{DynamicResource SecondaryHueMidBrush}"
                                 Text="{Binding PackDescription}"/>
                        <TextBlock Grid.Column="0" Grid.Row="2" Margin="4" VerticalAlignment="Center" Text="Tags" FontSize="14" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <TextBox Grid.Column="1" Grid.Row="2" Margin="4" Grid.ColumnSpan="3"
                                 Foreground="{DynamicResource SecondaryHueMidBrush}"
                                 Text="{Binding PackTags}"/>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Encoding">
                <DockPanel>
                    <Grid DockPanel.Dock="Top" Margin="12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <DockPanel Grid.Column="0">
                            <TextBlock DockPanel.Dock="Left" Margin="8,0" Text="Format" VerticalAlignment="Center"
                                       Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                            <ComboBox DisplayMemberPath="Text" SelectedValuePath="Value" MaxWidth="140" HorizontalContentAlignment="Center"
                                      Foreground="{DynamicResource SecondaryHueMidBrush}"
                                      ItemsSource="{StaticResource Formats}"
                                      SelectedValue="{Binding EncodingFormat}"/>
                        </DockPanel>
                        <DockPanel Grid.Column="1">
                            <TextBlock DockPanel.Dock="Left" Margin="8,0" Text="Default Sampler" VerticalAlignment="Center"
                                       Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                            <controls:ComboBoxEx DisplayMemberPath="Text" SelectedValuePath="Value" MaxWidth="140" HorizontalContentAlignment="Center" Placeholder="Nearest"
                                                 PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                 Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                 ItemsSource="{StaticResource Samplers}"
                                                 SelectedValue="{Binding EncodingSampler, Mode=TwoWay}"/>
                        </DockPanel>
                    </Grid>
                    <DataGrid AutoGenerateColumns="False" Margin="4" md:DataGridAssist.CellPadding="4,2" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False"
                              CanUserResizeRows="False" CanUserResizeColumns="True" CanUserSortColumns="False"
                              ItemsSource="{Binding EncodingChannels, Mode=OneTime}">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}"/>
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.Resources>
                            <Style TargetType="controls:ComboBoxEx" BasedOn="{StaticResource MaterialDesignComboBox}">
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                                <Setter Property="PlaceholderForeground" Value="{DynamicResource SecondaryHueDarkBrush}"/>
                            </Style>
                            <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource MaterialDesignDataGridRowHoverBackground}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="Transparent" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Channel" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <StackPanel Orientation="Horizontal">
                                            <Button Width="16" Height="16" Margin="2" Padding="0" ToolTip="Clear Values" Click="OnTextureResetButtonClick">
                                                <md:PackIcon Kind="Eraser" Width="12"/>
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatAccentButton}">
                                                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignToolForeground}"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <TextBlock Margin="2" VerticalAlignment="Center"
                                                       Text="{Binding Path=Label, Mode=OneTime}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Texture">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:ComboBoxEx DisplayMemberPath="Text" SelectedValuePath="Value"
                                                             ItemsSource="{StaticResource TextureTags}"
                                                             Placeholder="{Binding TextureDefault, Mode=OneWay, Converter={StaticResource TextureLabelConverter}}"
                                                             SelectedValue="{Binding Texture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Color">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:ComboBoxEx DisplayMemberPath="Text" SelectedValuePath="Value"
                                                             ItemsSource="{StaticResource ColorChannels}"
                                                             Placeholder="{Binding ColorDefault, Mode=OneWay}"
                                                             SelectedValue="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Sampler">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:ComboBoxEx DisplayMemberPath="Text" SelectedValuePath="Value"
                                                             ItemsSource="{StaticResource Samplers}"
                                                             Placeholder="{Binding SamplerDefault, Mode=OneWay, Converter={StaticResource SamplerLabelConverter}}"
                                                             SelectedValue="{Binding Sampler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Min">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:TextBoxEx HorizontalContentAlignment="Center"
                                                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                            PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                            Placeholder="{Binding MinDefault, Mode=OneWay}"
                                                            Text="{Binding MinValue, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Max">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:TextBoxEx HorizontalContentAlignment="Center"
                                                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                            PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                            Placeholder="{Binding MaxDefault, Mode=OneWay}"
                                                            Text="{Binding MaxValue, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Shift">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:TextBoxEx HorizontalContentAlignment="Center"
                                                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                            PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                            Placeholder="{Binding ShiftDefault, Mode=OneWay}"
                                                            Text="{Binding Shift, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Power">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:TextBoxEx HorizontalContentAlignment="Center"
                                                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                            PlaceholderForeground="{DynamicResource SecondaryHueDarkBrush}"
                                                            Placeholder="{Binding PowerDefault, Mode=OneWay}"
                                                            Text="{Binding Power, Mode=TwoWay, Converter={StaticResource NullableConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Invert">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="vm:OutputChannelMapping">
                                        <controls:CheckBoxEx HorizontalAlignment="Center"
                                                  Foreground="{DynamicResource SecondaryHueMidBrush}"
                                                  Placeholder="{Binding InvertDefault, Mode=OneWay}"
                                                  IsChecked="{Binding Invert, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
        </TabControl>
    </Grid>
</mde:MaterialWindow>
